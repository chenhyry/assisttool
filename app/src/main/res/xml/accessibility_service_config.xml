<?xml version="1.0" encoding="utf-8"?>
<accessibility-service xmlns:android="http://schemas.android.com/apk/res/android"
    android:accessibilityEventTypes="typeAllMask"
    android:accessibilityFeedbackType="feedbackGeneric"
    android:accessibilityFlags="flagDefault|flagReportViewIds|flagRetrieveInteractiveWindows|flagIncludeNotImportantViews"
    android:canPerformGestures="true"
    android:canRetrieveWindowContent="true"
    android:description="@string/install"
    android:notificationTimeout="100"
    android:packageNames="com.kuaishou.nebula,com.smile.gifmaker,com.ss.android.ugc.aweme,com.ss.android.ugc.aweme,com.ss.android.ugc.aweme.lite,com.ss.android.article.news,com.ss.android.article.lite,com.dragon.read" /><!--  accessibilityFeedbackType  反馈类型，有语音、视觉、触觉等-->
    <!--    android:accessibilityFeedbackType="feedbackSpoken"-->
    <!--    accessibilityEventTypes 此服务希望接收的事件类型;-->
    <!--    accessibilityFlags 辅助功能附加的标志，多个使用 ’ | '分隔,如flagRequestFilterKeyEvents 能够监听到系统的物理按键;-->
    <!--    accessibilityFeedbackType 反馈类型，有语音、视觉、触觉等;-->
    <!--    notificationTimeout 同一类型的两个辅助功能事件发送到服务的最短间隔（毫秒，两个辅助功能事件之间的最小周期）;-->
    <!--    canRetrieveWindowContent 辅助功能服务是否能够取回活动窗口内容的属性;-->

<!--accessibilityEventTypes：表示要监控的事件或者说是动作，比如通知栏收到推送消息、界面文本发生变动
accessibilityFeedbackType：表示反馈的类型，震动或者语音播放
accessibilityFlags：表示辅助功能查找节点的方式方法
canPerformGestures：表示是否接受7.0系统以上的手势分发
canRetrieveWindowContent：表示辅助功能是否可以获取活动window的内容和节点
description：表示描述，在设置中开启辅助功能下面的文字描述，给用户看的
notificationTimeout：表示两个相同类型的可访问性事件之间的最短时间段（以毫秒为单位）被发送到此服务
packageNames：要监听的应用完整包名,表示指定app生效，如果不设置则效果是全局的,多个用“,”隔开
-->